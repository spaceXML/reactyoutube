{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/VideoUploadPage/VideoUploadPage.js","components/views/VideoDetailPage/Sections/SideVideo.js","components/views/VideoDetailPage/Sections/Subscribe.js","components/views/VideoDetailPage/Sections/LikeDislikes.js","components/views/VideoDetailPage/Sections/SingleComment.js","components/views/VideoDetailPage/Sections/ReplyComment.js","components/views/VideoDetailPage/Sections/Comment.js","components/views/VideoDetailPage/VideoDetailPage.js","components/views/SubscriptionPage/SubscriptionPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","Title","Typography","Meta","Card","LandingPage","useState","Video","setVideo","Axios","success","videos","alert","renderCards","map","video","index","minutes","Math","floor","duration","seconds","lg","md","xs","style","position","href","_id","width","src","thumbnail","alt","className","avatar","writer","image","title","description","name","marginLeft","views","moment","createdAt","format","margin","level","gutter","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","Item","prefix","color","placeholder","value","onChange","onBlur","fontSize","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","confirmPassword","oneOf","lastname","unix","registerUser","errmsg","label","hasFeedback","validateStatus","onClick","Menu","SubMenu","ItemGroup","LeftMenu","mode","key","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","height","display","flexDirection","alignItems","justifyContent","TextArea","Input","PrivateOptions","CategoryOptions","VideoUploadPage","VideoTitle","setVideoTitle","Description","setDescription","Private","setPrivate","Category","setCategory","FilePath","setFilePath","Duration","setDuration","ThumbnailPath","setThumbnailPath","e","preventDefault","variable","privacy","filePath","category","message","maxWidth","textAlign","marginBottom","onDrop","files","formData","FormData","console","log","append","header","url","fileName","fileDuration","multiple","maxSize","getRootProps","getInputProps","currentTarget","onchange","item","size","SideVideo","sideVideos","setsideVideos","renderSideVideo","marginTop","marginRight","Fragment","Subscribe","SubscribeNumber","setSubscribeNumber","Subscribed","setSubscribed","userTo","subscribeNumber","subscribedVariable","userFrom","subscribed","backgroundColor","fontWeight","textTransform","LikeDislikes","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DisLikeAction","setDisLikeAction","videoId","commentId","likes","length","like","dislikes","dislike","theme","paddingLeft","cursor","SingleComment","OpenReply","setOpenReply","CommentValue","setCommentValue","event","variables","contents","postId","responseTo","comment","refreshFunction","result","actions","author","content","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","commentLists","Comment","commentValue","setcommentValue","VideoDetailPage","match","params","VideoDetail","setVideoDetail","Comments","setComments","videoDetail","comments","subscribeButton","controls","newComment","concat","SubscriptionPage","subscriptionVariables","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09ac2eb4.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport { Card, Avatar, Col, Typography, Row } from 'antd';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\nfunction LandingPage() {\r\n\r\n    const [Video, setVideo] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.get('/api/video/getVideos')\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setVideo(response.data.videos)\r\n            } else {\r\n                alert('비디오 가져오기를 실패 했습니다.')\r\n            }\r\n        })\r\n    }, [])\r\n    \r\n    const renderCards = Video.map((video, index) => {\r\n\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor(video.duration - minutes * 60);\r\n\r\n        return <Col lg={6} md={8} xs={24}>\r\n        <div style={{ position: 'relative' }}>\r\n            <a href={`/video/${video._id}`} >\r\n            <img style={{ width: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} alt=\"thumbnail\" />\r\n            <div className=\"duration\">\r\n                <span>{minutes} : {seconds}</span>\r\n            </div>\r\n            </a>\r\n        </div>\r\n        <br />\r\n        <Meta\r\n        avatar={\r\n            <Avatar src={video.writer.image} />\r\n        }\r\n        title={video.title}\r\n        description=\"\"\r\n        />\r\n        <span>{video.writer.name} </span><br />\r\n        <span style={{ marginLeft: '3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n        </Col>\r\n    })\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <Title level={2} > Recommended </Title>\r\n            <hr />\r\n\r\n            <Row gutter={[32, 16]}>\r\n                {renderCards}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  forgot password\r\n                  </a>\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Log in\r\n                </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string()\r\n          .required('Name is required'),\r\n        lastName: Yup.string()\r\n          .required('Last Name is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm Password is required')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then(response => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\r\n\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import React from 'react';\r\nimport { Menu } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode}>\r\n    <Menu.Item key=\"mail\">\r\n      <a href=\"/\">Home</a>\r\n    </Menu.Item>\r\n    <Menu.Item key=\"subscription\">\r\n      <a href=\"/subscription\">Subscription</a>\r\n    </Menu.Item>\r\n  </Menu>\r\n  )\r\n}\r\n\r\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Menu } from 'antd';\r\nimport axios from 'axios';\r\nimport { USER_SERVER } from '../../../Config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector(state => state.user)\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then(response => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert('Log Out Failed')\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"/login\">Signin</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"/register\">Signup</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  } else {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"upload\">\r\n          <a href=\"/video/upload\">Video</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"logout\">\r\n          <a onClick={logoutHandler}>Logout</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n\r\n","import React, { useState } from 'react';\r\nimport LeftMenu from './Sections/LeftMenu';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport { Drawer, Button, Icon } from 'antd';\r\nimport './Sections/Navbar.css';\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true)\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  };\r\n\r\n  return (\r\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\r\n      <div className=\"menu__logo\">\r\n        <a href=\"/\">Logo</a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport {Icon} from 'antd';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div style={{\r\n            height: '80px', display: 'flex',\r\n            flexDirection: 'column', alignItems: 'center',\r\n            justifyContent: 'center', fontSize:'1rem'\r\n        }}>\r\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react';\r\nimport { Typography, Button, Form, message, Input, Icon } from 'antd';\r\nimport Dropzone from 'react-dropzone';\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst PrivateOptions = [\r\n    {value: 0, label: \"Private\"},\r\n    {value: 1, label: \"Public\"}\r\n]\r\n\r\nconst CategoryOptions = [\r\n    {value: 0, label: \"Film & Animation\"},\r\n    {value: 1, label: \"Auto & Vehicles\"},\r\n    {value: 2, label: \"Music\"},\r\n    {value: 3, label: \"Pets & Animals\"}\r\n]\r\n\r\nfunction VideoUploadPage(props) {\r\n    const user = useSelector(state => state.user);\r\n    const [VideoTitle, setVideoTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Private, setPrivate] = useState(0)\r\n    const [Category, setCategory] = useState(\"Film & Animation\")\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [ThumbnailPath, setThumbnailPath] = useState(\"\")\r\n\r\n    const onTitleChange = (e) => {\r\n        setVideoTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = (e) => {\r\n        setDescription(e.currentTarget.value)\r\n    }\r\n\r\n    const onPrivateChange = (e) => {\r\n        setPrivate(e.currentTarget.value)\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n        setCategory(e.currentTarget.value)\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n\r\n        let formData = new FormData;\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        console.log(files)\r\n        formData.append(\"file\", files[0])\r\n\r\n        Axios.post('/api/video/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n\r\n                    let variable = {\r\n                        url: response.data.url,\r\n                        fileName: response.data.fileName\r\n                    }\r\n                    setFilePath(response.data.url)\r\n\r\n                    //gerenate thumbnail with this filepath ! \r\n\r\n                    Axios.post('/api/video/thumbnail', variable)\r\n                        .then(response => {\r\n                            if (response.data.success) {\r\n                                setDuration(response.data.fileDuration)\r\n                                setThumbnailPath(response.data.url)\r\n                            } else {\r\n                                alert('썸네일 생성 실패');\r\n                            }\r\n                        })\r\n\r\n\r\n                } else {\r\n                    alert('비디오 업로드 실패')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            writer: user.userData._id,\r\n            title: VideoTitle,\r\n            description: Description,\r\n            privacy: Private,\r\n            filePath: FilePath,\r\n            category: Category,\r\n            duration: Duration,\r\n            thumbnail: ThumbnailPath\r\n        }\r\n\r\n        Axios.post('/api/video/uploadVideo', variable)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                message.success('성공적으로 업로드 완료!')\r\n                setTimeout(() => {\r\n                    props.history.push('/')\r\n                }, 3000)\r\n                \r\n            } else {\r\n                alert('비디오 업로드에 실패 했습니다.')\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth:'700px', margin:'2rem auto' }}>\r\n            <div style={{ textAlign:'center', marginBottom:'2rem' }}>\r\n                <Title level={2}>Upload Video</Title>\r\n            </div>\r\n\r\n            <Form onSubmit={onSubmit}>\r\n                <div style={{ display:'flex', justifyContent:'space-between'}}>\r\n                    {/** Drop zone */}\r\n                    <Dropzone \r\n                    onDrop={onDrop}\r\n                    multiple={false}\r\n                    maxSize={10000000000}\r\n                    >\r\n                    {({ getRootProps, getInputProps}) => (\r\n                        <div style={{ width:'300px', height:'240px', border:'1px solid lightgray', display:'flex',\r\n                        alignItems:'center', justifyContent:'center'}} {...getRootProps()}>\r\n                            <input {...getInputProps()} />\r\n                            <Icon type=\"plus\" style={{ fontSize:'3rem'}} />\r\n                        </div>\r\n                    )}\r\n                    </Dropzone>\r\n\r\n                    {/** Thumbnail zone */}\r\n\r\n                    {ThumbnailPath && \r\n                    <div>\r\n                        <img src={`http://localhost:5000/${ThumbnailPath}`} alt=\"thumbnail\" />\r\n                    </div>\r\n                    }   \r\n                </div>\r\n            <br />\r\n            <br />\r\n            <label>Title</label>\r\n            <Input\r\n                onChange={onTitleChange}\r\n                value={VideoTitle}\r\n            />\r\n            <br />\r\n            <br />\r\n            <label>Description</label>\r\n            <TextArea \r\n                onChange={onDescriptionChange}\r\n                value={Description}\r\n            />\r\n            <br />\r\n            <br />\r\n            <select onchange={onPrivateChange}>\r\n                {PrivateOptions.map((item, index) => (\r\n                    <option key={index} value={item.value}>{item.label}</option>\r\n\r\n                ))}\r\n            </select>\r\n            <br />\r\n            <br />\r\n            <select onchange={onCategoryChange}>\r\n            {CategoryOptions.map((item, index) => (\r\n                    <option key={index} value={item.value}>{item.label}</option>\r\n\r\n                ))}\r\n            </select>\r\n            <br />\r\n            <br />\r\n            <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                Submit\r\n            </Button>\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoUploadPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios';\r\n\r\nfunction SideVideo() {\r\n\r\n    const [sideVideos, setsideVideos] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.get('/api/video/getVideos')\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setsideVideos(response.data.videos)\r\n            } else {\r\n                alert('비디오 가져오기를 실패 했습니다.')\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const renderSideVideo = sideVideos.map((video, index) => {\r\n\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor(video.duration - minutes * 60);\r\n\r\n        return <div key={index} style={{ display: 'flex', marginTop: '1rem', padding: '0 2rem'}}>\r\n            <div style={{ width: '40%', marginRight: '1rem'}} >\r\n                <a href>\r\n                    <img style={{ width: '100%', height: '100%'}} src={`http://localhost:5000/${video.thumbnail}`} alt=\"thumbnail\" />\r\n                </a>\r\n            </div>\r\n\r\n            <div style={{ width: '50%'}} >\r\n                <a href style={{ color: 'gray'}}>\r\n                    <span style={{ fontSize: '1rem', color: 'black'}}>{video.title}</span>\r\n                    <span>{video.writer.name}</span><br />\r\n                    <span>{video.views} views</span><br />\r\n                    <span>{minutes} : {seconds} </span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    })\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <div style={{ marginTop: '3rem'}} />\r\n            {renderSideVideo}\r\n        </React.Fragment>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default SideVideo\r\n","import React, { useEffect, useState} from 'react'\r\nimport Axios from 'axios'\r\n\r\n\r\nfunction Subscribe(props) {\r\n\r\n    const [SubscribeNumber, setSubscribeNumber] = useState(0)\r\n    const [Subscribed, setSubscribed] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let variable = { userTo: props.userTo}\r\n\r\n       Axios.post('/api/subscribe/subscribeNumber', variable)\r\n       .then(response => {\r\n           if(response.data.success) {\r\n                setSubscribeNumber(response.data.subscribeNumber)\r\n           } else {\r\n               alert('구독자 수 정보를 받아오지 못했습니다.')\r\n           }\r\n       })\r\n\r\n       let subscribedVariable = { userTo: props.userTo, userFrom: localStorage.getItem('userId') }\r\n\r\n       Axios.post('/api/subscribe/subscribed', subscribedVariable)\r\n       .then(response => {\r\n        if(response.data.success) {\r\n            setSubscribed(response.data.subscribed)\r\n        } else {\r\n            alert('정보를 받아오지 못했습니다.')\r\n        }\r\n    })\r\n    }, [])\r\n\r\n    const onSubscribe = () => {\r\n\r\n        let subscribedVariable = {\r\n\r\n            userTo: props.userTo,\r\n            userFrom: props.userFrom\r\n        }\r\n\r\n\r\n        if(Subscribed) {\r\n            //이미 구독중일 때\r\n\r\n            Axios.post('/api/subscribe/unSubscribe', subscribedVariable)\r\n                .then(response => {\r\n                    if(response.data.success) {\r\n                        setSubscribeNumber(SubscribeNumber - 1)\r\n                        setSubscribed(!Subscribed)\r\n                    }else {\r\n                        alert('구독 취소 실패')\r\n                    }\r\n                })\r\n        }else {\r\n            //아직 구독 중 아닐 때\r\n            Axios.post('/api/subscribe/subscribe', subscribedVariable)\r\n                .then(response => {\r\n                    if(response.data.success) {\r\n                        setSubscribeNumber(SubscribeNumber + 1)\r\n                        setSubscribed(!Subscribed)\r\n                    }else {\r\n                        alert('구독 실패')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                style={{\r\n                    backgroundColor: `${Subscribed ? '#AAAAAA' : '#CC0000'}`, \r\n                    borderRadius: '4px', color: 'white',\r\n                    padding: '10px 16px', fontWeight: '500', \r\n                    fontSize: '1rem', textTransform: 'uppercase'\r\n                 }}\r\n                 onClick={onSubscribe}\r\n            >\r\n                {SubscribeNumber} {Subscribed ? 'Subscribed' : 'Subscribe'}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscribe\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Tooltip, Icon } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nfunction LikeDislikes(props) {\r\n\r\n    const [Likes, setLikes] = useState(0)\r\n    const [Dislikes, setDislikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n    const [DisLikeAction, setDisLikeAction] = useState(null)\r\n    let variable = {\r\n\r\n    }\r\n\r\n    if(props.video) {\r\n        variable = { videoId: props.videoId, userId: props.userId}\r\n    }else {\r\n        variable = { commentId: props.commentId, userId: props.userId}\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/like/getLikes', variable)\r\n        .then(response=> {\r\n            if(response.data.success) {\r\n                //좋아요 수\r\n                setLikes(response.data.likes.length)\r\n\r\n                // 좋아요 여부 (이미 눌렀는지 아닌지)\r\n                response.data.likes.map(like => {\r\n                    if(like.userId === props.userId) {\r\n                        setLikeAction('liked')\r\n                    }\r\n                })\r\n\r\n            }else {\r\n                alert('Likes 정보를 가져오지 못했습니다.')\r\n            }\r\n        })\r\n\r\n\r\n        Axios.post('/api/like/getDislikes', variable)\r\n        .then(response=> {\r\n            if(response.data.success) {\r\n                //싫어요 수\r\n                setDislikes(response.data.dislikes.length)\r\n\r\n                // 싫어요 여부 (이미 눌렀는지 아닌지)\r\n                response.data.dislikes.map(dislike => {\r\n                    if(dislike.userId === props.userId) {\r\n                        setDisLikeAction('disliked')\r\n                    }\r\n                })\r\n\r\n            }else {\r\n                alert('Dislikes 정보를 가져오지 못했습니다.')\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const onLike = () => {\r\n\r\n        if(LikeAction === null) {\r\n            Axios.post('/api/like/upLike', variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setLikes(Likes + 1)\r\n                    setLikeAction('liked')\r\n\r\n                    if(DisLikeAction !== null) {\r\n                        setDisLikeAction(null)\r\n                        setDislikes(Dislikes -1)\r\n                    }\r\n\r\n                }else {\r\n                    alert('Like 실패')\r\n                }\r\n            })\r\n        }else {\r\n            Axios.post('/api/like/unLike', variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setLikes(Likes - 1)\r\n                    setLikeAction(null)\r\n\r\n                }else {\r\n                    alert('Like 취소 실패')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const onDislike = () => {\r\n        \r\n        if(DisLikeAction !== null) {\r\n            Axios.post('/api/like/unDislike', variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setDislikes(Dislikes - 1)\r\n                    setDisLikeAction(null)\r\n\r\n                }else {\r\n                    alert('dislike  취소 실패')\r\n                }\r\n            })\r\n        }else {\r\n            Axios.post('/api/like/upDislike', variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setDislikes(Dislikes + 1)\r\n                    setDisLikeAction('disliked')\r\n\r\n                    if(LikeAction !== null) {\r\n                        setLikeAction(null)\r\n                        setLikes(Likes - 1)\r\n                    }\r\n\r\n                }else {\r\n                    alert('Like 취소 실패')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    <Icon type=\"like\"\r\n                        theme={LikeAction === 'liked'? 'filled' : 'outlined'}\r\n                        onClick={onLike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}> {Likes} </span>\r\n            </span>&nbsp;&nbsp;\r\n\r\n            <span key=\"comment-basic-dislike\">\r\n                <Tooltip title=\"Dislike\">\r\n                    <Icon type=\"dislike\"\r\n                        theme={DisLikeAction === 'disliked'? 'filled' : 'outlined'}\r\n                        onClick={onDislike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}> {Dislikes} </span>\r\n            </span>&nbsp;&nbsp;\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LikeDislikes\r\n","import React, { useState } from 'react'\r\nimport { Comment, Avatar, Button, Input } from 'antd';\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport LikeDislikes from './LikeDislikes';\r\nconst { TextArea } = Input;\r\n\r\nfunction SingleComment(props) {\r\n\r\n    const user = useSelector(state => state.user);\r\n    const [OpenReply, setOpenReply] = useState(false)\r\n    const [CommentValue, setCommentValue] = useState(\"\")\r\n    const onClickReplyOpen = () => {\r\n        setOpenReply(!OpenReply)\r\n    }\r\n    const onHandleChange = (event) => {\r\n        setCommentValue(event.currentTarget.value)\r\n    }\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const variables = {\r\n            contents: CommentValue,\r\n            writer: user.userData._id,\r\n            postId: props.postId,\r\n            responseTo: props.comment._id\r\n        }\r\n\r\n        Axios.post('/api/comment/saveComment', variables)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                props.refreshFunction(response.data.result)\r\n                setCommentValue(\"\")\r\n                setOpenReply(false)\r\n            }else {\r\n                alert('커멘트 저장 실패')\r\n            }\r\n        })\r\n    }\r\n    const actions = [\r\n        <LikeDislikes userId={localStorage.getItem('userId')} commentId={props.comment._id} />\r\n        ,<span onClick={onClickReplyOpen} key=\"comment-basic-reply-to\">Reply to</span>\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <Comment\r\n                actions={actions}\r\n                author={props.comment.writer.name}\r\n                avatar={<Avatar src={props.comment.writer.image} alt />}\r\n                content={ <p> {props.comment.content}</p>}\r\n            />\r\n            \r\n            {OpenReply &&\r\n                <form style={{ display: 'flex'}} onSubmit={onSubmit} >\r\n                    <textarea \r\n                        style={{ width: '100%', borderRadius:'5px' }}\r\n                        onChange={onHandleChange}\r\n                        value={CommentValue}\r\n                        placeholder=\"코멘트를 작성해 주세요\"\r\n                    />\r\n                    <br />\r\n                    <button style={{ width: '20%', height: '52px' }} onClick={onSubmit} > Submit</button>\r\n\r\n                    \r\n                </form>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComment\r\n","import React, { useState, useEffect } from 'react'\r\nimport SingleComment from './SingleComment';\r\n\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\r\n    useEffect(() => {\r\n       \r\n        let commentNumber = 0;\r\n\r\n        props.commentLists.map((comment) => {\r\n            if(comment.responseTo === props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n\r\n        setChildCommentNumber(commentNumber)\r\n\r\n    }, [props.commentLists])\r\n\r\n\r\n    const renderReplyComment = (parentCommentId) => \r\n        props.commentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {\r\n                    comment.responseTo === parentCommentId &&\r\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} postId={props.videoId} />\r\n                        <ReplyComment refreshFunction={props.refreshFunction} commentLists={props.commentLists} postId={props.videoId} parentCommentId={comment._id}/>  \r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n\r\n        const onHandleChange = () => {\r\n            setOpenReplyComments(!OpenReplyComments)\r\n        }\r\n    \r\n\r\n    return (\r\n        <div>\r\n\r\n            {ChildCommentNumber > 0 && \r\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }} onClick={onHandleChange} >\r\n                    view {ChildCommentNumber} more comment(s)\r\n                </p>\r\n            }\r\n            \r\n            {OpenReplyComments &&\r\n                renderReplyComment(props.parentCommentId)\r\n            }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment\r\n","import React, {useState} from 'react'\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport SingleComment from './SingleComment';\r\nimport ReplyComment from './ReplyComment';\r\n\r\nfunction Comment(props) {\r\n    const videoId = props.postId;\r\n    const user = useSelector(state => state.user);\r\n    const [commentValue, setcommentValue] = useState(\"\")\r\n\r\n    const handleClick = (event) => {\r\n        setcommentValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const variables = {\r\n            contents: commentValue,\r\n            writer: user.userData._id,\r\n            postId: videoId\r\n        }\r\n\r\n        Axios.post('/api/comment/saveComment', variables)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                props.refreshFunction(response.data.result)\r\n                setcommentValue(\"\")\r\n            }else {\r\n                alert('커멘트 저장 실패')\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <p> Replies </p>\r\n            <hr />\r\n\r\n            {/* Comment Lists */}\r\n\r\n            {props.commentLists && props.commentLists.map((comment, index) => (\r\n                (!comment.responseTo &&\r\n                    <React.Fragment>\r\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} postId={videoId} />\r\n                        <ReplyComment refreshFunction={props.refreshFunction} parentCommentId={comment._id} commentLists={props.commentLists} postId={videoId} />\r\n                    </React.Fragment>\r\n                )\r\n\r\n            ))}\r\n\r\n            {/* Root Comment Form */}\r\n\r\n            <form style={{ display: 'flex'}} onSubmit={onSubmit} >\r\n                <textarea \r\n                    style={{ width: '100%', borderRadius:'5px' }}\r\n                    onChange={handleClick}\r\n                    value={commentValue}\r\n                    placeholder=\"코멘트를 작성해 주세요\"\r\n                />\r\n                <br />\r\n                <button style={{ width: '20%', height: '52px' }} onClick={onSubmit} > Submit</button>\r\n\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, List, Avatar } from 'antd';\r\nimport Axios from 'axios';\r\nimport SideVideo from './Sections/SideVideo';\r\nimport Subscribe from './Sections/Subscribe';\r\nimport Comment from './Sections/Comment';\r\nimport LikeDislikes from './Sections/LikeDislikes';\r\n\r\nfunction VideoDetailPage(props) {\r\n\r\n    const videoId = props.match.params.videoId\r\n    const variable = { videoId: videoId}\r\n\r\n    const [VideoDetail, setVideoDetail] = useState([])\r\n    const [Comments, setComments] = useState([])\r\n    useEffect(() => {\r\n        Axios.post('/api/video/getVideoDetail', variable)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setVideoDetail(response.data.videoDetail)\r\n            } else {\r\n                alert('비디오 정보를 가져오는데 실패했습니다.')\r\n            }\r\n        })\r\n\r\n        Axios.post('/api/comment/getComments', variable)\r\n        .then(response=> {\r\n            if(response.data.success) {\r\n                setComments(response.data.comments)\r\n            }else {\r\n                alert('코멘트 정보를 가져오는데 실패했습니다.')\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n    const refreshFunction = (newComment) => {\r\n        setComments(Comments.concat(newComment))\r\n    }\r\n\r\n    if(VideoDetail.writer) {\r\n\r\n        const subscribeButton = VideoDetail.writer._id !== localStorage.getItem('userId') && <Subscribe userTo={VideoDetail.writer._id} userFrom={localStorage.getItem('userId')} />\r\n\r\n        return (\r\n            <Row gutter={[16, 16]}>\r\n                <Col lg={18} xs={24} >\r\n                    <div style={{ width: '100%', padding: '3rem 4rem'}} >\r\n                        <video style={{ width: '100%' }} src={`http://localhost:5000/${VideoDetail.filePath}`} controls />\r\n\r\n                        <List.Item \r\n                            actions={[ <LikeDislikes video userId={localStorage.getItem('userId')} \r\n                            videoId={videoId} />, subscribeButton]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={VideoDetail.writer.image} />}\r\n                                title={VideoDetail.writer.name}\r\n                                description={VideoDetail.description}\r\n                            />\r\n                        \r\n                        </List.Item>\r\n\r\n                        {/* Comments */}\r\n                        <Comment refreshFunction={refreshFunction} commentLists={Comments}  postId={videoId}/>\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} >\r\n                    <SideVideo />\r\n                </Col>\r\n            </Row>\r\n    )\r\n    } else {\r\n        return (\r\n            <div>Loadig ...</div>\r\n         )\r\n    }\r\n}\r\n\r\nexport default VideoDetailPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport { Card, Avatar, Col, Typography, Row } from 'antd';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\nfunction SubscriptionPage() {\r\n\r\n    const [Video, setVideo] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const subscriptionVariables = {\r\n            userFrom: localStorage.getItem('userId')\r\n        }\r\n\r\n\r\n\r\n\r\n        Axios.post('/api/video/getSubscriptionVideos', subscriptionVariables)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setVideo(response.data.videos)\r\n            } else {\r\n                alert('비디오 가져오기를 실패 했습니다.')\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    const renderCards = Video.map((video, index) => {\r\n\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor(video.duration - minutes * 60);\r\n\r\n        return <Col lg={6} md={8} xs={24}>\r\n        <div style={{ position: 'relative' }}>\r\n            <a href={`/video/${video._id}`} >\r\n            <img style={{ width: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} alt=\"thumbnail\" />\r\n            <div className=\"duration\">\r\n                <span>{minutes} : {seconds}</span>\r\n            </div>\r\n            </a>\r\n        </div>\r\n        <br />\r\n        <Meta\r\n        avatar={\r\n            <Avatar src={video.writer.image} />\r\n        }\r\n        title={video.title}\r\n        description=\"\"\r\n        />\r\n        <span>{video.writer.name} </span><br />\r\n        <span style={{ marginLeft: '3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n        </Col>\r\n    })\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <Title level={2} > Recommended </Title>\r\n            <hr />\r\n\r\n            <Row gutter={[32, 16]}>\r\n                {renderCards}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionPage\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Footer from \"./views/Footer/Footer\";\r\nimport VideoUploadPage from \"./views/VideoUploadPage/VideoUploadPage\";\r\nimport VideoDetailPage from \"./views/VideoDetailPage/VideoDetailPage\";\r\nimport SubscriptionPage from \"./views/SubscriptionPage/SubscriptionPage\";\r\n\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n      <NavBar />\r\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\r\n        <Switch>\r\n          {/* null - 누구나 들어갈 수 있다, false - 로그인한 사람은 접근 불가, true - 로그인 한 사람만 접근 가능  */}\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route exact path=\"/video/upload\" component={Auth(VideoUploadPage, true)} />\r\n          <Route exact path=\"/video/:videoId\" component={Auth(VideoDetailPage, null)} />\r\n          <Route exact path=\"/subscription\" component={Auth(SubscriptionPage, null)} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}