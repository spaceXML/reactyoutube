{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kitri\\\\Documents\\\\GitHub\\\\reactyoutube\\\\client\\\\src\\\\components\\\\views\\\\VideoDetailPage\\\\VideoDetailPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, List, Avatar } from 'antd';\nimport Axios from 'axios';\nimport SideVideo from './Sections/SideVideo';\nimport Subscribe from './Sections/Subscribe';\nimport Comment from './Sections/Comment';\nimport LikeDislikes from './Sections/LikeDislikes';\n\nfunction VideoDetailPage(props) {\n  const videoId = props.match.params.videoId;\n  const variable = {\n    videoId: videoId\n  };\n  const [VideoDetail, setVideoDetail] = useState([]);\n  const [Comments, setComments] = useState([]);\n  useEffect(() => {\n    Axios.post('/api/video/getVideoDetail', variable).then(response => {\n      if (response.data.success) {\n        setVideoDetail(response.data.videoDetail);\n      } else {\n        alert('비디오 정보를 가져오는데 실패했습니다.');\n      }\n    });\n    Axios.post('/api/comment/getComments', variable).then(response => {\n      if (response.data.success) {\n        setComments(response.data.comments);\n      } else {\n        alert('코멘트 정보를 가져오는데 실패했습니다.');\n      }\n    });\n  }, []);\n\n  const refreshFunction = newComment => {\n    setComments(Comments.concat(newComment));\n  };\n\n  if (VideoDetail.writer) {\n    const subscribeButton = VideoDetail.writer._id !== localStorage.getItem('userId') && /*#__PURE__*/React.createElement(Subscribe, {\n      userTo: VideoDetail.writer._id,\n      userFrom: localStorage.getItem('userId'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 94\n      }\n    });\n    return /*#__PURE__*/React.createElement(Row, {\n      gutter: [16, 16],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 18,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        padding: '3rem 4rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      style: {\n        width: '100%'\n      },\n      src: `http://localhost:5000/${VideoDetail.filePath}`,\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(List.Item, {\n      actions: [/*#__PURE__*/React.createElement(LikeDislikes, {\n        video: true,\n        userId: localStorage.getItem('userId'),\n        videoId: videoId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 40\n        }\n      }), subscribeButton],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: VideoDetail.writer.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }\n      }),\n      title: VideoDetail.writer.name,\n      description: VideoDetail.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Comment, {\n      refreshFunction: refreshFunction,\n      commentLists: Comments,\n      postId: videoId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SideVideo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Loadig ...\");\n  }\n}\n\nexport default VideoDetailPage;","map":{"version":3,"sources":["C:/Users/kitri/Documents/GitHub/reactyoutube/client/src/components/views/VideoDetailPage/VideoDetailPage.js"],"names":["React","useState","useEffect","Row","Col","List","Avatar","Axios","SideVideo","Subscribe","Comment","LikeDislikes","VideoDetailPage","props","videoId","match","params","variable","VideoDetail","setVideoDetail","Comments","setComments","post","then","response","data","success","videoDetail","alert","comments","refreshFunction","newComment","concat","writer","subscribeButton","_id","localStorage","getItem","width","padding","filePath","image","name","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, List, Avatar } from 'antd';\r\nimport Axios from 'axios';\r\nimport SideVideo from './Sections/SideVideo';\r\nimport Subscribe from './Sections/Subscribe';\r\nimport Comment from './Sections/Comment';\r\nimport LikeDislikes from './Sections/LikeDislikes';\r\n\r\nfunction VideoDetailPage(props) {\r\n\r\n    const videoId = props.match.params.videoId\r\n    const variable = { videoId: videoId}\r\n\r\n    const [VideoDetail, setVideoDetail] = useState([])\r\n    const [Comments, setComments] = useState([])\r\n    useEffect(() => {\r\n        Axios.post('/api/video/getVideoDetail', variable)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setVideoDetail(response.data.videoDetail)\r\n            } else {\r\n                alert('비디오 정보를 가져오는데 실패했습니다.')\r\n            }\r\n        })\r\n\r\n        Axios.post('/api/comment/getComments', variable)\r\n        .then(response=> {\r\n            if(response.data.success) {\r\n                setComments(response.data.comments)\r\n            }else {\r\n                alert('코멘트 정보를 가져오는데 실패했습니다.')\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n    const refreshFunction = (newComment) => {\r\n        setComments(Comments.concat(newComment))\r\n    }\r\n\r\n    if(VideoDetail.writer) {\r\n\r\n        const subscribeButton = VideoDetail.writer._id !== localStorage.getItem('userId') && <Subscribe userTo={VideoDetail.writer._id} userFrom={localStorage.getItem('userId')} />\r\n\r\n        return (\r\n            <Row gutter={[16, 16]}>\r\n                <Col lg={18} xs={24} >\r\n                    <div style={{ width: '100%', padding: '3rem 4rem'}} >\r\n                        <video style={{ width: '100%' }} src={`http://localhost:5000/${VideoDetail.filePath}`} controls />\r\n\r\n                        <List.Item \r\n                            actions={[ <LikeDislikes video userId={localStorage.getItem('userId')} \r\n                            videoId={videoId} />, subscribeButton]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={VideoDetail.writer.image} />}\r\n                                title={VideoDetail.writer.name}\r\n                                description={VideoDetail.description}\r\n                            />\r\n                        \r\n                        </List.Item>\r\n\r\n                        {/* Comments */}\r\n                        <Comment refreshFunction={refreshFunction} commentLists={Comments}  postId={videoId}/>\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24} >\r\n                    <SideVideo />\r\n                </Col>\r\n            </Row>\r\n    )\r\n    } else {\r\n        return (\r\n            <div>Loadig ...</div>\r\n         )\r\n    }\r\n}\r\n\r\nexport default VideoDetailPage\r\n"]},"metadata":{},"sourceType":"module"}