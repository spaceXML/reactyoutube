{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\kitri\\\\Documents\\\\GitHub\\\\reactpage123\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Axios from'axios';import{useSelector}from'react-redux';import SingleComment from'./SingleComment';import ReplyComment from'./ReplyComment';function Comment(props){var videoId=props.postId;var user=useSelector(function(state){return state.user;});var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),commentValue=_useState2[0],setcommentValue=_useState2[1];var handleClick=function handleClick(event){setcommentValue(event.currentTarget.value);};var onSubmit=function onSubmit(event){event.preventDefault();var variables={contents:commentValue,writer:user.userData._id,postId:videoId};Axios.post('/api/comment/saveComment',variables).then(function(response){if(response.data.success){props.refreshFunction(response.data.result);setcommentValue(\"\");}else{alert('커멘트 저장 실패');}});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\" Replies \"),/*#__PURE__*/React.createElement(\"hr\",null),props.commentLists&&props.commentLists.map(function(comment,index){return!comment.responseTo&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(SingleComment,{refreshFunction:props.refreshFunction,comment:comment,postId:videoId}),/*#__PURE__*/React.createElement(ReplyComment,{refreshFunction:props.refreshFunction,parentCommentId:comment._id,commentLists:props.commentLists,postId:videoId}));}),/*#__PURE__*/React.createElement(\"form\",{style:{display:'flex'},onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"textarea\",{style:{width:'100%',borderRadius:'5px'},onChange:handleClick,value:commentValue,placeholder:\"\\uCF54\\uBA58\\uD2B8\\uB97C \\uC791\\uC131\\uD574 \\uC8FC\\uC138\\uC694\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{style:{width:'20%',height:'52px'},onClick:onSubmit},\" Submit\")));}export default Comment;","map":{"version":3,"sources":["C:/Users/kitri/Documents/GitHub/reactpage123/client/src/components/views/VideoDetailPage/Sections/Comment.js"],"names":["React","useState","Axios","useSelector","SingleComment","ReplyComment","Comment","props","videoId","postId","user","state","commentValue","setcommentValue","handleClick","event","currentTarget","value","onSubmit","preventDefault","variables","contents","writer","userData","_id","post","then","response","data","success","refreshFunction","result","alert","commentLists","map","comment","index","responseTo","display","width","borderRadius","height"],"mappings":"qLAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACpB,GAAMC,CAAAA,OAAO,CAAGD,KAAK,CAACE,MAAtB,CACA,GAAMC,CAAAA,IAAI,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAxB,CAFoB,cAGoBT,QAAQ,CAAC,EAAD,CAH5B,wCAGbW,YAHa,eAGCC,eAHD,eAKpB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3BF,eAAe,CAACE,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAf,CACH,CAFD,CAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACH,KAAD,CAAW,CACxBA,KAAK,CAACI,cAAN,GAEA,GAAMC,CAAAA,SAAS,CAAG,CACdC,QAAQ,CAAET,YADI,CAEdU,MAAM,CAAEZ,IAAI,CAACa,QAAL,CAAcC,GAFR,CAGdf,MAAM,CAAED,OAHM,CAAlB,CAMAN,KAAK,CAACuB,IAAN,CAAW,0BAAX,CAAuCL,SAAvC,EACCM,IADD,CACM,SAAAC,QAAQ,CAAI,CACd,GAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,CAA0B,CACtBtB,KAAK,CAACuB,eAAN,CAAsBH,QAAQ,CAACC,IAAT,CAAcG,MAApC,EACAlB,eAAe,CAAC,EAAD,CAAf,CACH,CAHD,IAGM,CACFmB,KAAK,CAAC,WAAD,CAAL,CACH,CACJ,CARD,EASH,CAlBD,CAoBA,mBACI,4CACI,8BADJ,cAEI,yCAFJ,cAGI,8BAHJ,CAOKzB,KAAK,CAAC0B,YAAN,EAAsB1B,KAAK,CAAC0B,YAAN,CAAmBC,GAAnB,CAAuB,SAACC,OAAD,CAAUC,KAAV,QACzC,CAACD,OAAO,CAACE,UAAT,eACG,oBAAC,KAAD,CAAO,QAAP,mBACI,oBAAC,aAAD,EAAe,eAAe,CAAE9B,KAAK,CAACuB,eAAtC,CAAuD,OAAO,CAAEK,OAAhE,CAAyE,MAAM,CAAE3B,OAAjF,EADJ,cAEI,oBAAC,YAAD,EAAc,eAAe,CAAED,KAAK,CAACuB,eAArC,CAAsD,eAAe,CAAEK,OAAO,CAACX,GAA/E,CAAoF,YAAY,CAAEjB,KAAK,CAAC0B,YAAxG,CAAsH,MAAM,CAAEzB,OAA9H,EAFJ,CAFsC,EAAvB,CAP3B,cAmBI,4BAAM,KAAK,CAAE,CAAE8B,OAAO,CAAE,MAAX,CAAb,CAAiC,QAAQ,CAAEpB,QAA3C,eACI,gCACI,KAAK,CAAE,CAAEqB,KAAK,CAAE,MAAT,CAAiBC,YAAY,CAAC,KAA9B,CADX,CAEI,QAAQ,CAAE1B,WAFd,CAGI,KAAK,CAAEF,YAHX,CAII,WAAW,CAAC,gEAJhB,EADJ,cAOI,8BAPJ,cAQI,8BAAQ,KAAK,CAAE,CAAE2B,KAAK,CAAE,KAAT,CAAgBE,MAAM,CAAE,MAAxB,CAAf,CAAiD,OAAO,CAAEvB,QAA1D,YARJ,CAnBJ,CADJ,CAkCH,CAED,cAAeZ,CAAAA,OAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport SingleComment from './SingleComment';\r\nimport ReplyComment from './ReplyComment';\r\n\r\nfunction Comment(props) {\r\n    const videoId = props.postId;\r\n    const user = useSelector(state => state.user);\r\n    const [commentValue, setcommentValue] = useState(\"\")\r\n\r\n    const handleClick = (event) => {\r\n        setcommentValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const variables = {\r\n            contents: commentValue,\r\n            writer: user.userData._id,\r\n            postId: videoId\r\n        }\r\n\r\n        Axios.post('/api/comment/saveComment', variables)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                props.refreshFunction(response.data.result)\r\n                setcommentValue(\"\")\r\n            }else {\r\n                alert('커멘트 저장 실패')\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <p> Replies </p>\r\n            <hr />\r\n\r\n            {/* Comment Lists */}\r\n\r\n            {props.commentLists && props.commentLists.map((comment, index) => (\r\n                (!comment.responseTo &&\r\n                    <React.Fragment>\r\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} postId={videoId} />\r\n                        <ReplyComment refreshFunction={props.refreshFunction} parentCommentId={comment._id} commentLists={props.commentLists} postId={videoId} />\r\n                    </React.Fragment>\r\n                )\r\n\r\n            ))}\r\n\r\n            {/* Root Comment Form */}\r\n\r\n            <form style={{ display: 'flex'}} onSubmit={onSubmit} >\r\n                <textarea \r\n                    style={{ width: '100%', borderRadius:'5px' }}\r\n                    onChange={handleClick}\r\n                    value={commentValue}\r\n                    placeholder=\"코멘트를 작성해 주세요\"\r\n                />\r\n                <br />\r\n                <button style={{ width: '20%', height: '52px' }} onClick={onSubmit} > Submit</button>\r\n\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n"]},"metadata":{},"sourceType":"module"}