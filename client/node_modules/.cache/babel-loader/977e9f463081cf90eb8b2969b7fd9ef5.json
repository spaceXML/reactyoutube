{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kitri\\\\Documents\\\\GitHub\\\\reactpage123\\\\client\\\\src\\\\components\\\\views\\\\VideoDetailPage\\\\Sections\\\\Comment.js\";\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\n\nfunction Comment(props) {\n  const videoId = props.postId;\n  const user = useSelector(state => state.user);\n  const [commentValue, setcommentValue] = useState(\"\");\n\n  const handleClick = event => {\n    setcommentValue(event.currentTarget.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const variables = {\n      contents: commentValue,\n      writer: user.userData._id,\n      postId: videoId\n    };\n    Axios.post('/api/comment/saveComment', variables).then(response => {\n      if (response.data.success) {\n        props.refreshFunction(response.data.result);\n        setcommentValue(\"\");\n      } else {\n        alert('커멘트 저장 실패');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \" Replies \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), props.commentLists && props.commentLists.map((comment, index) => !comment.responseTo && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SingleComment, {\n    refreshFunction: props.refreshFunction,\n    comment: comment,\n    postId: videoId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ReplyComment, {\n    refreshFunction: props.refreshFunction,\n    parentCommentId: comment._id,\n    commentLists: props.commentLists,\n    postId: videoId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      display: 'flex'\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    style: {\n      width: '100%',\n      borderRadius: '5px'\n    },\n    onChange: handleClick,\n    value: commentValue,\n    placeholder: \"\\uCF54\\uBA58\\uD2B8\\uB97C \\uC791\\uC131\\uD574 \\uC8FC\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      width: '20%',\n      height: '52px'\n    },\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \" Submit\")));\n}\n\nexport default Comment;","map":{"version":3,"sources":["C:/Users/kitri/Documents/GitHub/reactpage123/client/src/components/views/VideoDetailPage/Sections/Comment.js"],"names":["React","useState","Axios","useSelector","SingleComment","ReplyComment","Comment","props","videoId","postId","user","state","commentValue","setcommentValue","handleClick","event","currentTarget","value","onSubmit","preventDefault","variables","contents","writer","userData","_id","post","then","response","data","success","refreshFunction","result","alert","commentLists","map","comment","index","responseTo","display","width","borderRadius","height"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport SingleComment from './SingleComment';\r\nimport ReplyComment from './ReplyComment';\r\n\r\nfunction Comment(props) {\r\n    const videoId = props.postId;\r\n    const user = useSelector(state => state.user);\r\n    const [commentValue, setcommentValue] = useState(\"\")\r\n\r\n    const handleClick = (event) => {\r\n        setcommentValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const variables = {\r\n            contents: commentValue,\r\n            writer: user.userData._id,\r\n            postId: videoId\r\n        }\r\n\r\n        Axios.post('/api/comment/saveComment', variables)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                props.refreshFunction(response.data.result)\r\n                setcommentValue(\"\")\r\n            }else {\r\n                alert('커멘트 저장 실패')\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <p> Replies </p>\r\n            <hr />\r\n\r\n            {/* Comment Lists */}\r\n\r\n            {props.commentLists && props.commentLists.map((comment, index) => (\r\n                (!comment.responseTo &&\r\n                    <React.Fragment>\r\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} postId={videoId} />\r\n                        <ReplyComment refreshFunction={props.refreshFunction} parentCommentId={comment._id} commentLists={props.commentLists} postId={videoId} />\r\n                    </React.Fragment>\r\n                )\r\n\r\n            ))}\r\n\r\n            {/* Root Comment Form */}\r\n\r\n            <form style={{ display: 'flex'}} onSubmit={onSubmit} >\r\n                <textarea \r\n                    style={{ width: '100%', borderRadius:'5px' }}\r\n                    onChange={handleClick}\r\n                    value={commentValue}\r\n                    placeholder=\"코멘트를 작성해 주세요\"\r\n                />\r\n                <br />\r\n                <button style={{ width: '20%', height: '52px' }} onClick={onSubmit} > Submit</button>\r\n\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n"]},"metadata":{},"sourceType":"module"}