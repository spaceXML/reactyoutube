{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kitri\\\\Documents\\\\GitHub\\\\reactpage123\\\\client\\\\src\\\\components\\\\views\\\\SubscriptionPage\\\\SubscriptionPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { FaCode } from \"react-icons/fa\";\nimport { Card, Avatar, Col, Typography, Row } from 'antd';\nimport Axios from 'axios';\nimport moment from 'moment';\nconst {\n  Title\n} = Typography;\nconst {\n  Meta\n} = Card;\n\nfunction SubscriptionPage() {\n  const [Video, setVideo] = useState([]);\n  useEffect(() => {\n    const subscriptionVariables = {\n      userFrom: localStorage.getItem('userId')\n    };\n    Axios.post('/api/video/getSubscriptionVideos', subscriptionVariables).then(response => {\n      if (response.data.success) {\n        setVideo(response.data.videos);\n      } else {\n        alert('비디오 가져오기를 실패 했습니다.');\n      }\n    });\n  }, []);\n  const renderCards = Video.map((video, index) => {\n    var minutes = Math.floor(video.duration / 60);\n    var seconds = Math.floor(video.duration - minutes * 60);\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 8,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: `/video/${video._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '100%'\n      },\n      src: `http://localhost:5000/${video.thumbnail}`,\n      alt: \"thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"duration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, minutes, \" : \", seconds)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: video.writer.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }),\n      title: video.title,\n      description: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, video.writer.name, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: '3rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, video.views, \" views\"), \" - \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 75\n      }\n    }, moment(video.createdAt).format(\"MMM Do YY\")));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '85%',\n      margin: '3rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \" Recommended \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: [32, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, renderCards));\n}\n\nexport default SubscriptionPage;","map":{"version":3,"sources":["C:/Users/kitri/Documents/GitHub/reactpage123/client/src/components/views/SubscriptionPage/SubscriptionPage.js"],"names":["React","useEffect","useState","FaCode","Card","Avatar","Col","Typography","Row","Axios","moment","Title","Meta","SubscriptionPage","Video","setVideo","subscriptionVariables","userFrom","localStorage","getItem","post","then","response","data","success","videos","alert","renderCards","map","video","index","minutes","Math","floor","duration","seconds","position","_id","width","thumbnail","writer","image","title","name","marginLeft","views","createdAt","format","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport { Card, Avatar, Col, Typography, Row } from 'antd';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\nfunction SubscriptionPage() {\r\n\r\n    const [Video, setVideo] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const subscriptionVariables = {\r\n            userFrom: localStorage.getItem('userId')\r\n        }\r\n\r\n\r\n\r\n\r\n        Axios.post('/api/video/getSubscriptionVideos', subscriptionVariables)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setVideo(response.data.videos)\r\n            } else {\r\n                alert('비디오 가져오기를 실패 했습니다.')\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    const renderCards = Video.map((video, index) => {\r\n\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor(video.duration - minutes * 60);\r\n\r\n        return <Col lg={6} md={8} xs={24}>\r\n        <div style={{ position: 'relative' }}>\r\n            <a href={`/video/${video._id}`} >\r\n            <img style={{ width: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} alt=\"thumbnail\" />\r\n            <div className=\"duration\">\r\n                <span>{minutes} : {seconds}</span>\r\n            </div>\r\n            </a>\r\n        </div>\r\n        <br />\r\n        <Meta\r\n        avatar={\r\n            <Avatar src={video.writer.image} />\r\n        }\r\n        title={video.title}\r\n        description=\"\"\r\n        />\r\n        <span>{video.writer.name} </span><br />\r\n        <span style={{ marginLeft: '3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n        </Col>\r\n    })\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <Title level={2} > Recommended </Title>\r\n            <hr />\r\n\r\n            <Row gutter={[32, 16]}>\r\n                {renderCards}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionPage\r\n"]},"metadata":{},"sourceType":"module"}