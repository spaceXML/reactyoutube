{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kitri\\\\Documents\\\\GitHub\\\\reactpage123\\\\client\\\\src\\\\components\\\\views\\\\VideoDetailPage\\\\Sections\\\\LikeDislikes.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Tooltip, Icon } from 'antd';\nimport Axios from 'axios';\n\nfunction LikeDislikes(props) {\n  const [Likes, setLikes] = useState(0);\n  const [Dislikes, setDislikes] = useState(0);\n  const [LikeAction, setLikeAction] = useState(null);\n  const [DisLikeAction, setDisLikeAction] = useState(null);\n  let variable = {};\n\n  if (props.video) {\n    variable = {\n      videoId: props.videoId,\n      userId: props.userId\n    };\n  } else {\n    variable = {\n      commentId: props.commentId,\n      userId: props.userId\n    };\n  }\n\n  useEffect(() => {\n    Axios.post('/api/like/getLikes', variable).then(response => {\n      if (response.data.success) {\n        //좋아요 수\n        setLikes(response.data.likes.length); // 좋아요 여부 (이미 눌렀는지 아닌지)\n\n        response.data.likes.map(like => {\n          if (like.userId === props.userId) {\n            setLikeAction('liked');\n          }\n        });\n      } else {\n        alert('Likes 정보를 가져오지 못했습니다.');\n      }\n    });\n    Axios.post('/api/like/getDislikes', variable).then(response => {\n      if (response.data.success) {\n        //싫어요 수\n        setDislikes(response.data.dislikes.length); // 싫어요 여부 (이미 눌렀는지 아닌지)\n\n        response.data.dislikes.map(dislike => {\n          if (dislike.userId === props.userId) {\n            setDisLikeAction('disliked');\n          }\n        });\n      } else {\n        alert('Dislikes 정보를 가져오지 못했습니다.');\n      }\n    });\n  }, []);\n\n  const onLike = () => {\n    if (LikeAction === null) {\n      Axios.post('/api/like/upLike', variable).then(response => {\n        if (response.data.success) {\n          setLikes(Likes + 1);\n          setLikeAction('liked');\n\n          if (DisLikeAction !== null) {\n            setDisLikeAction(null);\n            setDislikes(Dislikes - 1);\n          }\n        } else {\n          alert('Like 실패');\n        }\n      });\n    } else {\n      Axios.post('/api/like/unLike', variable).then(response => {\n        if (response.data.success) {\n          setLikes(Likes - 1);\n          setLikeAction(null);\n        } else {\n          alert('Like 취소 실패');\n        }\n      });\n    }\n  };\n\n  const onDislike = () => {\n    if (DisLikeAction !== null) {\n      Axios.post('/api/like/unDislike', variable).then(response => {\n        if (response.data.success) {\n          setDislikes(Dislikes - 1);\n          setDisLikeAction(null);\n        } else {\n          alert('dislike  취소 실패');\n        }\n      });\n    } else {\n      Axios.post('/api/like/upDislike', variable).then(response => {\n        if (response.data.success) {\n          setDislikes(Dislikes + 1);\n          setDisLikeAction('disliked');\n\n          if (LikeAction !== null) {\n            setLikeAction(null);\n            setLikes(Likes - 1);\n          }\n        } else {\n          alert('Like 취소 실패');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    key: \"comment-basic-like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: \"like\",\n    theme: LikeAction === 'liked' ? 'filled' : 'outlined',\n    onClick: onLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: '8px',\n      cursor: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \" \", Likes, \" \")), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    key: \"comment-basic-dislike\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Dislike\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: \"dislike\",\n    theme: DisLikeAction === 'disliked' ? 'filled' : 'outlined',\n    onClick: onDislike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: '8px',\n      cursor: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \" \", Dislikes, \" \")), \"\\xA0\\xA0\");\n}\n\nexport default LikeDislikes;","map":{"version":3,"sources":["C:/Users/kitri/Documents/GitHub/reactpage123/client/src/components/views/VideoDetailPage/Sections/LikeDislikes.js"],"names":["React","useEffect","useState","Tooltip","Icon","Axios","LikeDislikes","props","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DisLikeAction","setDisLikeAction","variable","video","videoId","userId","commentId","post","then","response","data","success","likes","length","map","like","alert","dislikes","dislike","onLike","onDislike","paddingLeft","cursor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,MAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAEzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,IAAD,CAAlD;AACA,MAAIc,QAAQ,GAAG,EAAf;;AAIA,MAAGT,KAAK,CAACU,KAAT,EAAgB;AACZD,IAAAA,QAAQ,GAAG;AAAEE,MAAAA,OAAO,EAAEX,KAAK,CAACW,OAAjB;AAA0BC,MAAAA,MAAM,EAAEZ,KAAK,CAACY;AAAxC,KAAX;AACH,GAFD,MAEM;AACFH,IAAAA,QAAQ,GAAG;AAAEI,MAAAA,SAAS,EAAEb,KAAK,CAACa,SAAnB;AAA8BD,MAAAA,MAAM,EAAEZ,KAAK,CAACY;AAA5C,KAAX;AACH;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACgB,IAAN,CAAW,oBAAX,EAAiCL,QAAjC,EACCM,IADD,CACMC,QAAQ,IAAG;AACb,UAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAA0B;AACtB;AACAhB,QAAAA,QAAQ,CAACc,QAAQ,CAACC,IAAT,CAAcE,KAAd,CAAoBC,MAArB,CAAR,CAFsB,CAItB;;AACAJ,QAAAA,QAAQ,CAACC,IAAT,CAAcE,KAAd,CAAoBE,GAApB,CAAwBC,IAAI,IAAI;AAC5B,cAAGA,IAAI,CAACV,MAAL,KAAgBZ,KAAK,CAACY,MAAzB,EAAiC;AAC7BN,YAAAA,aAAa,CAAC,OAAD,CAAb;AACH;AACJ,SAJD;AAMH,OAXD,MAWM;AACFiB,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACH;AACJ,KAhBD;AAmBAzB,IAAAA,KAAK,CAACgB,IAAN,CAAW,uBAAX,EAAoCL,QAApC,EACCM,IADD,CACMC,QAAQ,IAAG;AACb,UAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAA0B;AACtB;AACAd,QAAAA,WAAW,CAACY,QAAQ,CAACC,IAAT,CAAcO,QAAd,CAAuBJ,MAAxB,CAAX,CAFsB,CAItB;;AACAJ,QAAAA,QAAQ,CAACC,IAAT,CAAcO,QAAd,CAAuBH,GAAvB,CAA2BI,OAAO,IAAI;AAClC,cAAGA,OAAO,CAACb,MAAR,KAAmBZ,KAAK,CAACY,MAA5B,EAAoC;AAChCJ,YAAAA,gBAAgB,CAAC,UAAD,CAAhB;AACH;AACJ,SAJD;AAMH,OAXD,MAWM;AACFe,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACH;AACJ,KAhBD;AAiBH,GArCQ,EAqCN,EArCM,CAAT;;AAuCA,QAAMG,MAAM,GAAG,MAAM;AAEjB,QAAGrB,UAAU,KAAK,IAAlB,EAAwB;AACpBP,MAAAA,KAAK,CAACgB,IAAN,CAAW,kBAAX,EAA+BL,QAA/B,EACCM,IADD,CACMC,QAAQ,IAAI;AACd,YAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAA0B;AACtBhB,UAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAK,UAAAA,aAAa,CAAC,OAAD,CAAb;;AAEA,cAAGC,aAAa,KAAK,IAArB,EAA2B;AACvBC,YAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAJ,YAAAA,WAAW,CAACD,QAAQ,GAAE,CAAX,CAAX;AACH;AAEJ,SATD,MASM;AACFoB,UAAAA,KAAK,CAAC,SAAD,CAAL;AACH;AACJ,OAdD;AAeH,KAhBD,MAgBM;AACFzB,MAAAA,KAAK,CAACgB,IAAN,CAAW,kBAAX,EAA+BL,QAA/B,EACCM,IADD,CACMC,QAAQ,IAAI;AACd,YAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAA0B;AACtBhB,UAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAK,UAAAA,aAAa,CAAC,IAAD,CAAb;AAEH,SAJD,MAIM;AACFiB,UAAAA,KAAK,CAAC,YAAD,CAAL;AACH;AACJ,OATD;AAUH;AACJ,GA9BD;;AAgCA,QAAMI,SAAS,GAAG,MAAM;AAEpB,QAAGpB,aAAa,KAAK,IAArB,EAA2B;AACvBT,MAAAA,KAAK,CAACgB,IAAN,CAAW,qBAAX,EAAkCL,QAAlC,EACCM,IADD,CACMC,QAAQ,IAAI;AACd,YAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAA0B;AACtBd,UAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACAK,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAEH,SAJD,MAIM;AACFe,UAAAA,KAAK,CAAC,gBAAD,CAAL;AACH;AACJ,OATD;AAUH,KAXD,MAWM;AACFzB,MAAAA,KAAK,CAACgB,IAAN,CAAW,qBAAX,EAAkCL,QAAlC,EACCM,IADD,CACMC,QAAQ,IAAI;AACd,YAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAA0B;AACtBd,UAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACAK,UAAAA,gBAAgB,CAAC,UAAD,CAAhB;;AAEA,cAAGH,UAAU,KAAK,IAAlB,EAAwB;AACpBC,YAAAA,aAAa,CAAC,IAAD,CAAb;AACAJ,YAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;AAEJ,SATD,MASM;AACFsB,UAAAA,KAAK,CAAC,YAAD,CAAL;AACH;AACJ,OAdD;AAeH;AACJ,GA9BD;;AAgCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,GAAG,EAAC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AACI,IAAA,KAAK,EAAElB,UAAU,KAAK,OAAf,GAAwB,QAAxB,GAAmC,UAD9C;AAEI,IAAA,OAAO,EAAEqB,MAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAOI;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,WAAW,EAAE,KAAf;AAAsBC,MAAAA,MAAM,EAAE;AAA9B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuD5B,KAAvD,MAPJ,CADJ,2BAWI;AAAM,IAAA,GAAG,EAAC,uBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AACI,IAAA,KAAK,EAAEM,aAAa,KAAK,UAAlB,GAA8B,QAA9B,GAAyC,UADpD;AAEI,IAAA,OAAO,EAAEoB,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAOI;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE,KAAf;AAAsBC,MAAAA,MAAM,EAAE;AAA9B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuD1B,QAAvD,MAPJ,CAXJ,aADJ;AAyBH;;AAED,eAAeJ,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Tooltip, Icon } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nfunction LikeDislikes(props) {\r\n\r\n    const [Likes, setLikes] = useState(0)\r\n    const [Dislikes, setDislikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n    const [DisLikeAction, setDisLikeAction] = useState(null)\r\n    let variable = {\r\n\r\n    }\r\n\r\n    if(props.video) {\r\n        variable = { videoId: props.videoId, userId: props.userId}\r\n    }else {\r\n        variable = { commentId: props.commentId, userId: props.userId}\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/like/getLikes', variable)\r\n        .then(response=> {\r\n            if(response.data.success) {\r\n                //좋아요 수\r\n                setLikes(response.data.likes.length)\r\n\r\n                // 좋아요 여부 (이미 눌렀는지 아닌지)\r\n                response.data.likes.map(like => {\r\n                    if(like.userId === props.userId) {\r\n                        setLikeAction('liked')\r\n                    }\r\n                })\r\n\r\n            }else {\r\n                alert('Likes 정보를 가져오지 못했습니다.')\r\n            }\r\n        })\r\n\r\n\r\n        Axios.post('/api/like/getDislikes', variable)\r\n        .then(response=> {\r\n            if(response.data.success) {\r\n                //싫어요 수\r\n                setDislikes(response.data.dislikes.length)\r\n\r\n                // 싫어요 여부 (이미 눌렀는지 아닌지)\r\n                response.data.dislikes.map(dislike => {\r\n                    if(dislike.userId === props.userId) {\r\n                        setDisLikeAction('disliked')\r\n                    }\r\n                })\r\n\r\n            }else {\r\n                alert('Dislikes 정보를 가져오지 못했습니다.')\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const onLike = () => {\r\n\r\n        if(LikeAction === null) {\r\n            Axios.post('/api/like/upLike', variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setLikes(Likes + 1)\r\n                    setLikeAction('liked')\r\n\r\n                    if(DisLikeAction !== null) {\r\n                        setDisLikeAction(null)\r\n                        setDislikes(Dislikes -1)\r\n                    }\r\n\r\n                }else {\r\n                    alert('Like 실패')\r\n                }\r\n            })\r\n        }else {\r\n            Axios.post('/api/like/unLike', variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setLikes(Likes - 1)\r\n                    setLikeAction(null)\r\n\r\n                }else {\r\n                    alert('Like 취소 실패')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const onDislike = () => {\r\n        \r\n        if(DisLikeAction !== null) {\r\n            Axios.post('/api/like/unDislike', variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setDislikes(Dislikes - 1)\r\n                    setDisLikeAction(null)\r\n\r\n                }else {\r\n                    alert('dislike  취소 실패')\r\n                }\r\n            })\r\n        }else {\r\n            Axios.post('/api/like/upDislike', variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setDislikes(Dislikes + 1)\r\n                    setDisLikeAction('disliked')\r\n\r\n                    if(LikeAction !== null) {\r\n                        setLikeAction(null)\r\n                        setLikes(Likes - 1)\r\n                    }\r\n\r\n                }else {\r\n                    alert('Like 취소 실패')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    <Icon type=\"like\"\r\n                        theme={LikeAction === 'liked'? 'filled' : 'outlined'}\r\n                        onClick={onLike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}> {Likes} </span>\r\n            </span>&nbsp;&nbsp;\r\n\r\n            <span key=\"comment-basic-dislike\">\r\n                <Tooltip title=\"Dislike\">\r\n                    <Icon type=\"dislike\"\r\n                        theme={DisLikeAction === 'disliked'? 'filled' : 'outlined'}\r\n                        onClick={onDislike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}> {Dislikes} </span>\r\n            </span>&nbsp;&nbsp;\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LikeDislikes\r\n"]},"metadata":{},"sourceType":"module"}