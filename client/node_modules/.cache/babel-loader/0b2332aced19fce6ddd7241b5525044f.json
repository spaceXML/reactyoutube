{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */import React,{useEffect}from'react';import{auth}from'../_actions/user_actions';import{useSelector,useDispatch}from\"react-redux\";export default function(SpecificComponent,option){var adminRoute=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;function AuthenticationCheck(props){var user=useSelector(function(state){return state.user;});var dispatch=useDispatch();useEffect(function(){//To know my current status, send Auth request \ndispatch(auth()).then(function(response){//Not Loggined in Status \nif(!response.payload.isAuth){if(option){props.history.push('/login');}//Loggined in Status \n}else{//supposed to be Admin page, but not admin person wants to go inside\nif(adminRoute&&!response.payload.isAdmin){props.history.push('/');}//Logged in Status, but Try to go into log in page \nelse{if(option===false){props.history.push('/');}}}});},[]);return/*#__PURE__*/React.createElement(SpecificComponent,Object.assign({},props,{user:user}));}return AuthenticationCheck;}","map":{"version":3,"sources":["C:/Users/kitri/Documents/GitHub/reactpage123/client/src/hoc/auth.js"],"names":["React","useEffect","auth","useSelector","useDispatch","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","state","dispatch","then","response","payload","isAuth","history","push","isAdmin"],"mappings":"AAAA,gDACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,0BAArB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,cAAe,UAAUC,iBAAV,CAA6BC,MAA7B,CAAwD,IAAnBC,CAAAA,UAAmB,2DAAN,IAAM,CACnE,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAEhC,GAAIC,CAAAA,IAAI,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAtB,CACA,GAAME,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEAH,SAAS,CAAC,UAAM,CACZ;AACAW,QAAQ,CAACV,IAAI,EAAL,CAAR,CAAiBW,IAAjB,CAAsB,SAAAC,QAAQ,CAAI,CAC9B;AACA,GAAI,CAACA,QAAQ,CAACC,OAAT,CAAiBC,MAAtB,CAA8B,CAC1B,GAAIV,MAAJ,CAAY,CACRG,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,QAAnB,EACH,CACD;AACH,CALD,IAKO,CACH;AACA,GAAIX,UAAU,EAAI,CAACO,QAAQ,CAACC,OAAT,CAAiBI,OAApC,CAA6C,CACzCV,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB,EACH,CACD;AAHA,IAIK,CACD,GAAIZ,MAAM,GAAK,KAAf,CAAsB,CAClBG,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB,EACH,CACJ,CACJ,CACJ,CAnBD,EAqBH,CAvBQ,CAuBN,EAvBM,CAAT,CAyBA,mBACI,oBAAC,iBAAD,kBAAuBT,KAAvB,EAA8B,IAAI,CAAEC,IAApC,GADJ,CAGH,CACD,MAAOF,CAAAA,mBAAP,CACH","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}