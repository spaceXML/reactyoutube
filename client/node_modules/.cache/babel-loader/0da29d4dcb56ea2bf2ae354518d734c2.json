{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\kitri\\\\Documents\\\\GitHub\\\\reactpage123\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{FaCode}from\"react-icons/fa\";import{Card,Avatar,Col,Typography,Row}from'antd';import Axios from'axios';import moment from'moment';var Title=Typography.Title;var Meta=Card.Meta;function SubscriptionPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),Video=_useState2[0],setVideo=_useState2[1];useEffect(function(){var subscriptionVariables={userFrom:localStorage.getItem('userId')};Axios.post('/api/video/getSubscriptionVideos',subscriptionVariables).then(function(response){if(response.data.success){setVideo(response.data.videos);}else{alert('비디오 가져오기를 실패 했습니다.');}});},[]);var renderCards=Video.map(function(video,index){var minutes=Math.floor(video.duration/60);var seconds=Math.floor(video.duration-minutes*60);return/*#__PURE__*/React.createElement(Col,{lg:6,md:8,xs:24},/*#__PURE__*/React.createElement(\"div\",{style:{position:'relative'}},/*#__PURE__*/React.createElement(\"a\",{href:\"/video/\".concat(video._id)},/*#__PURE__*/React.createElement(\"img\",{style:{width:'100%'},src:\"http://localhost:5000/\".concat(video.thumbnail),alt:\"thumbnail\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"duration\"},/*#__PURE__*/React.createElement(\"span\",null,minutes,\" : \",seconds)))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Meta,{avatar:/*#__PURE__*/React.createElement(Avatar,{src:video.writer.image}),title:video.title,description:\"\"}),/*#__PURE__*/React.createElement(\"span\",null,video.writer.name,\" \"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{style:{marginLeft:'3rem'}},video.views,\" views\"),\" - \",/*#__PURE__*/React.createElement(\"span\",null,moment(video.createdAt).format(\"MMM Do YY\")));});return/*#__PURE__*/React.createElement(\"div\",{style:{width:'85%',margin:'3rem auto'}},/*#__PURE__*/React.createElement(Title,{level:2},\" Recommended \"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Row,{gutter:[32,16]},renderCards));}export default SubscriptionPage;","map":{"version":3,"sources":["C:/Users/kitri/Documents/GitHub/reactpage123/client/src/components/views/SubscriptionPage/SubscriptionPage.js"],"names":["React","useEffect","useState","FaCode","Card","Avatar","Col","Typography","Row","Axios","moment","Title","Meta","SubscriptionPage","Video","setVideo","subscriptionVariables","userFrom","localStorage","getItem","post","then","response","data","success","videos","alert","renderCards","map","video","index","minutes","Math","floor","duration","seconds","position","_id","width","thumbnail","writer","image","title","name","marginLeft","views","createdAt","format","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport { Card, Avatar, Col, Typography, Row } from 'antd';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\nfunction SubscriptionPage() {\r\n\r\n    const [Video, setVideo] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const subscriptionVariables = {\r\n            userFrom: localStorage.getItem('userId')\r\n        }\r\n\r\n\r\n\r\n\r\n        Axios.post('/api/video/getSubscriptionVideos', subscriptionVariables)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setVideo(response.data.videos)\r\n            } else {\r\n                alert('비디오 가져오기를 실패 했습니다.')\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    const renderCards = Video.map((video, index) => {\r\n\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor(video.duration - minutes * 60);\r\n\r\n        return <Col lg={6} md={8} xs={24}>\r\n        <div style={{ position: 'relative' }}>\r\n            <a href={`/video/${video._id}`} >\r\n            <img style={{ width: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} alt=\"thumbnail\" />\r\n            <div className=\"duration\">\r\n                <span>{minutes} : {seconds}</span>\r\n            </div>\r\n            </a>\r\n        </div>\r\n        <br />\r\n        <Meta\r\n        avatar={\r\n            <Avatar src={video.writer.image} />\r\n        }\r\n        title={video.title}\r\n        description=\"\"\r\n        />\r\n        <span>{video.writer.name} </span><br />\r\n        <span style={{ marginLeft: '3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n        </Col>\r\n    })\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <Title level={2} > Recommended </Title>\r\n            <hr />\r\n\r\n            <Row gutter={[32, 16]}>\r\n                {renderCards}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionPage\r\n"]},"metadata":{},"sourceType":"module"}