{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kitri\\\\Documents\\\\GitHub\\\\reactyoutube\\\\client\\\\src\\\\components\\\\views\\\\VideoUploadPage\\\\VideoUploadPage.js\";\nimport React, { useState } from 'react';\nimport { Typography, Button, Form, message, Input, Icon } from 'antd';\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nconst {\n  TextArea\n} = Input;\nconst {\n  Title\n} = Typography;\nconst PrivateOptions = [{\n  value: 0,\n  label: \"Private\"\n}, {\n  value: 1,\n  label: \"Public\"\n}];\nconst CategoryOptions = [{\n  value: 0,\n  label: \"Film & Animation\"\n}, {\n  value: 1,\n  label: \"Auto & Vehicles\"\n}, {\n  value: 2,\n  label: \"Music\"\n}, {\n  value: 3,\n  label: \"Pets & Animals\"\n}];\n\nfunction VideoUploadPage(props) {\n  const user = useSelector(state => state.user);\n  const [VideoTitle, setVideoTitle] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const [Private, setPrivate] = useState(0);\n  const [Category, setCategory] = useState(\"Film & Animation\");\n  const [FilePath, setFilePath] = useState(\"\");\n  const [Duration, setDuration] = useState(\"\");\n  const [ThumbnailPath, setThumbnailPath] = useState(\"\");\n\n  const onTitleChange = e => {\n    setVideoTitle(e.currentTarget.value);\n  };\n\n  const onDescriptionChange = e => {\n    setDescription(e.currentTarget.value);\n  };\n\n  const onPrivateChange = e => {\n    setPrivate(e.currentTarget.value);\n  };\n\n  const onCategoryChange = e => {\n    setCategory(e.currentTarget.value);\n  };\n\n  const onDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    console.log(files);\n    formData.append(\"file\", files[0]);\n    Axios.post('/api/video/uploadfiles', formData, config).then(response => {\n      if (response.data.success) {\n        let variable = {\n          url: response.data.url,\n          fileName: response.data.fileName\n        };\n        setFilePath(response.data.url); //gerenate thumbnail with this filepath ! \n\n        Axios.post('/api/video/thumbnail', variable).then(response => {\n          if (response.data.success) {\n            setDuration(response.data.fileDuration);\n            setThumbnailPath(response.data.url);\n          } else {\n            alert('썸네일 생성 실패');\n          }\n        });\n      } else {\n        alert('비디오 업로드 실패');\n      }\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const variable = {\n      writer: user.userData._id,\n      title: VideoTitle,\n      description: Description,\n      privacy: Private,\n      filePath: FilePath,\n      category: Category,\n      duration: Duration,\n      thumbnail: ThumbnailPath\n    };\n    Axios.post('/api/video/uploadVideo', variable).then(response => {\n      if (response.data.success) {\n        message.success('성공적으로 업로드 완료!');\n        setTimeout(() => {\n          props.history.push('/');\n        }, 3000);\n      } else {\n        alert('비디오 업로드에 실패 했습니다.');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: '2rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Upload Video\")), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: onDrop,\n    multiple: false,\n    maxSize: 10000000000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      width: '300px',\n      height: '240px',\n      border: '1px solid lightgray',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Icon, {\n    type: \"plus\",\n    style: {\n      fontSize: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }))), ThumbnailPath && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://localhost:5000/${ThumbnailPath}`,\n    alt: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: onTitleChange,\n    value: VideoTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: onDescriptionChange,\n    value: Description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onchange: onPrivateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, PrivateOptions.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, item.label))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onchange: onCategoryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, CategoryOptions.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, item.label))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"large\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Submit\")));\n}\n\nexport default VideoUploadPage;","map":{"version":3,"sources":["C:/Users/kitri/Documents/GitHub/reactyoutube/client/src/components/views/VideoUploadPage/VideoUploadPage.js"],"names":["React","useState","Typography","Button","Form","message","Input","Icon","Dropzone","Axios","useSelector","TextArea","Title","PrivateOptions","value","label","CategoryOptions","VideoUploadPage","props","user","state","VideoTitle","setVideoTitle","Description","setDescription","Private","setPrivate","Category","setCategory","FilePath","setFilePath","Duration","setDuration","ThumbnailPath","setThumbnailPath","onTitleChange","e","currentTarget","onDescriptionChange","onPrivateChange","onCategoryChange","onDrop","files","formData","FormData","config","header","console","log","append","post","then","response","data","success","variable","url","fileName","fileDuration","alert","onSubmit","preventDefault","writer","userData","_id","title","description","privacy","filePath","category","duration","thumbnail","setTimeout","history","push","maxWidth","margin","textAlign","marginBottom","display","justifyContent","getRootProps","getInputProps","width","height","border","alignItems","fontSize","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Typography, Button, Form, message, Input, Icon } from 'antd';\r\nimport Dropzone from 'react-dropzone';\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst PrivateOptions = [\r\n    {value: 0, label: \"Private\"},\r\n    {value: 1, label: \"Public\"}\r\n]\r\n\r\nconst CategoryOptions = [\r\n    {value: 0, label: \"Film & Animation\"},\r\n    {value: 1, label: \"Auto & Vehicles\"},\r\n    {value: 2, label: \"Music\"},\r\n    {value: 3, label: \"Pets & Animals\"}\r\n]\r\n\r\nfunction VideoUploadPage(props) {\r\n    const user = useSelector(state => state.user);\r\n    const [VideoTitle, setVideoTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Private, setPrivate] = useState(0)\r\n    const [Category, setCategory] = useState(\"Film & Animation\")\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [ThumbnailPath, setThumbnailPath] = useState(\"\")\r\n\r\n    const onTitleChange = (e) => {\r\n        setVideoTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = (e) => {\r\n        setDescription(e.currentTarget.value)\r\n    }\r\n\r\n    const onPrivateChange = (e) => {\r\n        setPrivate(e.currentTarget.value)\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n        setCategory(e.currentTarget.value)\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n\r\n        let formData = new FormData;\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        console.log(files)\r\n        formData.append(\"file\", files[0])\r\n\r\n        Axios.post('/api/video/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n\r\n                    let variable = {\r\n                        url: response.data.url,\r\n                        fileName: response.data.fileName\r\n                    }\r\n                    setFilePath(response.data.url)\r\n\r\n                    //gerenate thumbnail with this filepath ! \r\n\r\n                    Axios.post('/api/video/thumbnail', variable)\r\n                        .then(response => {\r\n                            if (response.data.success) {\r\n                                setDuration(response.data.fileDuration)\r\n                                setThumbnailPath(response.data.url)\r\n                            } else {\r\n                                alert('썸네일 생성 실패');\r\n                            }\r\n                        })\r\n\r\n\r\n                } else {\r\n                    alert('비디오 업로드 실패')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            writer: user.userData._id,\r\n            title: VideoTitle,\r\n            description: Description,\r\n            privacy: Private,\r\n            filePath: FilePath,\r\n            category: Category,\r\n            duration: Duration,\r\n            thumbnail: ThumbnailPath\r\n        }\r\n\r\n        Axios.post('/api/video/uploadVideo', variable)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                message.success('성공적으로 업로드 완료!')\r\n                setTimeout(() => {\r\n                    props.history.push('/')\r\n                }, 3000)\r\n                \r\n            } else {\r\n                alert('비디오 업로드에 실패 했습니다.')\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth:'700px', margin:'2rem auto' }}>\r\n            <div style={{ textAlign:'center', marginBottom:'2rem' }}>\r\n                <Title level={2}>Upload Video</Title>\r\n            </div>\r\n\r\n            <Form onSubmit={onSubmit}>\r\n                <div style={{ display:'flex', justifyContent:'space-between'}}>\r\n                    {/** Drop zone */}\r\n                    <Dropzone \r\n                    onDrop={onDrop}\r\n                    multiple={false}\r\n                    maxSize={10000000000}\r\n                    >\r\n                    {({ getRootProps, getInputProps}) => (\r\n                        <div style={{ width:'300px', height:'240px', border:'1px solid lightgray', display:'flex',\r\n                        alignItems:'center', justifyContent:'center'}} {...getRootProps()}>\r\n                            <input {...getInputProps()} />\r\n                            <Icon type=\"plus\" style={{ fontSize:'3rem'}} />\r\n                        </div>\r\n                    )}\r\n                    </Dropzone>\r\n\r\n                    {/** Thumbnail zone */}\r\n\r\n                    {ThumbnailPath && \r\n                    <div>\r\n                        <img src={`http://localhost:5000/${ThumbnailPath}`} alt=\"thumbnail\" />\r\n                    </div>\r\n                    }   \r\n                </div>\r\n            <br />\r\n            <br />\r\n            <label>Title</label>\r\n            <Input\r\n                onChange={onTitleChange}\r\n                value={VideoTitle}\r\n            />\r\n            <br />\r\n            <br />\r\n            <label>Description</label>\r\n            <TextArea \r\n                onChange={onDescriptionChange}\r\n                value={Description}\r\n            />\r\n            <br />\r\n            <br />\r\n            <select onchange={onPrivateChange}>\r\n                {PrivateOptions.map((item, index) => (\r\n                    <option key={index} value={item.value}>{item.label}</option>\r\n\r\n                ))}\r\n            </select>\r\n            <br />\r\n            <br />\r\n            <select onchange={onCategoryChange}>\r\n            {CategoryOptions.map((item, index) => (\r\n                    <option key={index} value={item.value}>{item.label}</option>\r\n\r\n                ))}\r\n            </select>\r\n            <br />\r\n            <br />\r\n            <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                Submit\r\n            </Button>\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoUploadPage\r\n"]},"metadata":{},"sourceType":"module"}